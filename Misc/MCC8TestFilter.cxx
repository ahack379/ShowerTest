#ifndef LARLITE_MCC8TESTFILTER_CXX
#define LARLITE_MCC8TESTFILTER_CXX

#include "MCC8TestFilter.h"

namespace larlite {

  bool MCC8TestFilter::initialize() {
    
  // Test13 Missed
    _evt_m = {{5847, {20, 1008} }, {5459, {107, 5395} }, {5877, {4, 222} }, {5830, {195, 9759} }, {5830, {59, 2992} }, {5824, {306, 15306} }, {5823, {4, 223} }, {5804, {113, 5687} }, {5825, {17, 860} }, {5821, {36, 1829} }, {5705, {32, 1649} }, {5821, {41, 2092} }, {5850, {37, 1861} }, {5515, {141, 7076} }, {5558, {37, 1892} }, {5459, {41, 2088} }, {5822, {65, 3274} }, {5459, {58, 2934} }, {5924, {19, 992} }, {5804, {87, 4390} }, {5459, {198, 9949} }, {5122, {1, 99} }, {5155, {98, 4919} }, {5821, {3, 192} }, {5819, {50, 2502} }, {5830, {168, 8428} }, {5364, {154, 7714} }, {5896, {25, 1285} }, {5823, {177, 8890} }, {5891, {67, 3361} }, {5805, {51, 2560} }, {5827, {68, 3412} }, {5153, {71, 3580} }, {5819, {103, 5193} }, {5819, {215, 10772} }, {5412, {70, 3529} }, {5128, {32, 1627} }, {5147, {27, 1378} }, {5804, {131, 6558} }, {5878, {13, 698} }, {5885, {3, 176} }, {5823, {259, 12961} }, {5830, {44, 2210} }, {5826, {33, 1699} }, {5826, {9, 482} }, {5804, {102, 5147} }, {5891, {136, 6803} }, {5895, {39, 1977} }, {5851, {45, 2276} }, {5153, {105, 5283} }, {5830, {262, 13136} }, {5462, {20, 1011} }, {5850, {6, 308} }, {5850, {135, 6773} }, {5831, {35, 1774} }, {5564, {195, 9751} }, {5819, {114, 5746} }, {5127, {114, 5728} }, {5824, {248, 12413} }, {5832, {135, 6778} }, {5849, {9, 496} }, {5832, {126, 6332} }, {5130, {34, 1730} }, {5896, {6, 318} }, {5832, {195, 9761} }, {5850, {53, 2693} }, {5897, {0, 21} }, {5822, {35, 1792} }, {5850, {80, 4027} }, {5824, {256, 12832} }, {5824, {319, 15973} }, {5832, {214, 10714} }, {5831, {99, 4991} }, {5124, {41, 2091} }, {5827, {36, 1816} }, {5892, {4, 216} }, {5810, {116, 5814} }, {5824, {43, 2170} }, {5819, {101, 5091} }, {5824, {198, 9943} }, {5823, {219, 10975} }, {5157, {80, 4033} }, {5130, {6, 311} }, {5823, {45, 2287} }, {5849, {5, 251} }, {5845, {53, 2660} }, {5125, {12, 616} }, {5364, {34, 1734} }, {5830, {223, 11159} }, {5851, {27, 1385} }, {5824, {164, 8232} }, {5819, {191, 9581} }, {5819, {142, 7142} }, {5804, {156, 7850} }, {5830, {1, 65} }, {5403, {21, 1057} }, {5850, {18, 944} }, {5122, {16, 805} }, {5847, {35, 1794} }, {5849, {38, 1939} }, {5808, {93, 4691} }, {5821, {19, 952} }, {5157, {121, 6062} }, {5831, {120, 6033} }, {5826, {24, 1211} }, {5819, {77, 3895} }, {5805, {40, 2044} }, {5827, {2, 115} }, {5849, {19, 984} }, {5839, {40, 2006} }, {5160, {37, 1860} }, {5558, {33, 1652} }, {5827, {100, 5046} }, {5820, {5, 265} }, {5822, {15, 766} }, {5832, {179, 8952} }, {5824, {185, 9261} }, {5127, {14, 745} }, {5824, {13, 661} }, {5146, {12, 631} }, {5826, {42, 2122} }, {5459, {21, 1058} }, {5826, {17, 881} }, {5891, {144, 7245} }, {5830, {40, 2040} }, {5897, {29, 1490} }, {5921, {80, 4003} }, {5821, {60, 3041} }, {5607, {63, 3177} }, {5401, {9, 485} }, {5826, {20, 1005} }, {5762, {144, 7237} }, {5897, {52, 2602} }, {5564, {191, 9585} }, {5819, {168, 8402} }, {5839, {23, 1167} }, {5819, {206, 10344} }, {5830, {5, 292} }, {5830, {116, 5837} }, {5886, {2, 104} }, {5808, {84, 4207} }, {5151, {177, 8872} }, {5849, {87, 4355} }, {5891, {83, 4178} }, {5830, {43, 2159} }, {5830, {198, 9936} }, {5832, {18, 932} }, {5822, {26, 1344} }, {5127, {39, 1953} }, {5823, {117, 5865} }, {5879, {36, 1814} }, {5822, {93, 4670} }, {5847, {8, 409} }, {5804, {167, 8393} }, {5823, {167, 8374} }, {5897, {47, 2374} }, {5851, {46, 2327} }, {5804, {88, 4449} }, {5819, {90, 4539} }, {5462, {26, 1342} }, {5824, {316, 15850} }, {5401, {27, 1377} }, {5826, {38, 1901} }, {5459, {113, 5660} }, {5845, {26, 1327} }, {5462, {23, 1195} }, {5847, {38, 1938} }, {5459, {79, 3964} }, {5824, {296, 14827} }, {5891, {120, 6050} }, {5819, {65, 3269} }, {5191, {34, 1748} }, {5804, {57, 2885} }, {5128, {30, 1548} }, {5829, {14, 732} }, {5374, {0, 27} }, {5169, {8, 440} }, {5850, {138, 6920} }, {5134, {29, 1482} }, {5146, {39, 1999} }, {5827, {0, 5} }, {5122, {0, 5} }, {5821, {6, 328} }, {5819, {41, 2060} }, {5830, {261, 13076} }, {5233, {61, 3070} }, {5910, {42, 2111} }, {5130, {42, 2126} }, {5808, {68, 3414} }, {5808, {56, 2812} }, {5851, {20, 1020} }, {5459, {34, 1711} }, {5892, {36, 1819} }, {5151, {200, 10012} }, {5821, {32, 1629} }, {5899, {9, 498} }, {5832, {46, 2312} }, {5845, {75, 3784} }, {5130, {54, 2705} }, {5897, {60, 3041} }, {5839, {20, 1024} }, {5822, {16, 845} }, {5122, {12, 609} }, {5879, {60, 3043} }, {5830, {96, 4839} }, {5830, {209, 10456} }, {5155, {92, 4636} }, {5459, {56, 2829} }, {5891, {3, 190} }, {5130, {57, 2880} }, {5897, {9, 465} }, {5127, {8, 421} }, {5470, {22, 1141} }, {5142, {32, 1613} }, {5829, {12, 633} }, {5401, {5, 252} }, {5891, {40, 2035} }, {5459, {145, 7286} }, {5896, {36, 1814} }, {5360, {12, 636} }, {5832, {62, 3124} }, {5412, {75, 3771} }, {5825, {2, 137} }, {5153, {77, 3895} }, {5850, {101, 5072} }, {5823, {262, 13136} }, {5845, {40, 2036} }, {5824, {78, 3915} }, {5819, {193, 9689} }, {5891, {0, 25} }, {5819, {181, 9060} }, {5832, {90, 4535} }, {5805, {7, 383} }, {5805, {24, 1210} }, {5819, {198, 9920} }, {5808, {94, 4731} }, {5824, {300, 15002} }, {5850, {124, 6250} }, {5860, {11, 582} }, {5819, {60, 3036} }, {5891, {156, 7843} }, {5880, {10, 509} }, {5157, {89, 4497} }, {5826, {7, 395} }, {5822, {81, 4073} }, {5824, {28, 1437} }, {5850, {79, 3995} }, {5823, {230, 11523} }, {5705, {194, 9713} }, {5823, {8, 439} }, {5822, {19, 957} }, {5151, {135, 6758} }, {5870, {31, 1551} }, {5845, {68, 3409} }, {5899, {36, 1843} }, {5823, {127, 6387} }, {5824, {52, 2612} }, {5557, {28, 1438} }, {5830, {235, 11783} }, {5127, {120, 6041} }, {5823, {189, 9468} }, {5136, {8, 402} }, {5808, {39, 1952} }, {5821, {16, 840} }, {5824, {86, 4311} }, {5831, {66, 3318} }, {5804, {168, 8401} }, {5850, {93, 4683} }, {5826, {44, 2208} }, {5809, {0, 14} }, {5849, {71, 3555} }, {5515, {216, 10824} }, {5825, {28, 1435} }, {5819, {272, 13642i} }   };

    return true;
  }
  
  bool MCC8TestFilter::analyze(storage_manager* storage) {

    auto run    = storage->run_id();
    auto subrun = storage->subrun_id();
    auto event  = storage->event_id();
    
    if ( _evt_m.find(run) == _evt_m.end() ) 
      return false;
     
    if ( _evt_m[run].first == subrun && _evt_m[run].second == event )
      return true;
    else 
      return false;
  
  }

  bool MCC8TestFilter::finalize() {
  
    return true;
  }

}
#endif
