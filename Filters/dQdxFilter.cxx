#ifndef LARLITE_DQDXFILTER_CXX
#define LARLITE_DQDXFILTER_CXX

#include "dQdxFilter.h"

namespace larlite {

  bool dQdxFilter::initialize() {

_onbeam_v={0,8,17,859,22,1104,193,9664,66,3324,80,4032,70,3529,59,2976,192,9633,236,11836,54,2727,22,1112,24,1244,130,6511,74,3737,28,1403,23,1157,7,368,12,631,144,7227,10,541,12,606,152,7621,7,365,19,962,16,805,47,2387,18,916,7,391,26,1323,214,10711,24,1231,16,841,26,1345,52,2636,139,6951,50,2539,4,218,84,4211,20,1021,71,3600,169,8491,161,8068,142,7143,24,1243,82,4150,43,2187,32,1617,58,2912,40,2007,17,883,5,259,27,1374,179,8975,25,1288,41,2080,87,4371,63,3182,1,52,32,1649,103,5152,114,5709,5,251,39,1971,88,4449,11,593,219,10984,21,1087,325,16287,177,8874,153,7658,262,13133,262,13136,21,1090,81,4082,3,195,42,2127,189,9460,26,1342,137,6875,46,2344,174,8713,39,1980,108,5424,64,3218,116,5831};

_offbeam_v={77,3875,186,9348 };

_mcbnbcos_v={3184,159151,1612,80576,4452,222555,3685,184215,2213,110614,1378,68873,1050,52461,2075,103707,3935,196725,3261,163023,1293,64643,759,37914,3147,157310,871,43542,1329,66422,2961,148026,775,38718,2277,113812,347,17313,347,17324,1838,91871,1467,73324,2906,145272,2634,131676,2586,129285,813,40626,2538,126883,35,1702,868,43396,4320,215952,4320,215966,4588,229367,665,33221,2863,143134,2240,111955,3275,163727,16,782,1985,99204,1733,86608,3885,194234,4478,223894,2416,120753,70,3486,1274,63698,1632,81593,3253,162644,4119,205922,3098,154878,1970,98486,3442,172054,1365,68234,4558,227851,4558,227894,4567,228348,2463,123101,2136,106753,1748,87383,2606,130277,2663,133118,4689,234423,2181,109019,1344,67182,2947,147319,1157,57831,1418,70899,1270,63460,1776,88769,1408,70395,1104,55195,1022,51051,4465,223210,3774,188686,4090,204478,2043,102115,2015,100744,2746,137255,4630,231498,829,41427,186,9256,3143,157119,2397,119840,2022,101057,1166,58273,1706,85296,1997,99808,1997,99815,368,18391,183,9116,2734,136694,188,9352,2479,123932,3037,151809,3174,158673,933,46604,786,39288,3793,189625,3720,185951,3310,165459,4139,206915,2073,103602,4690,234490,4087,204344,3561,178005,1288,64388,2557,127823,966,48296,2838,141879,300,14966,3988,199391,2572,128583,3001,150012,1235,61728,1180,58965,1379,68931,517,25845,3808,190387,1486,74291,951,47527,1390,69461,1390,69494,3553,177647,4189,209421,3917,195834,4666,233297,1681,84041,2215,110713,4381,219005,3317,165825,4282,214059,459,22911,2540,126970,125,6220,594,29679,2265,113201,4556,227800,1567,78319,1660,82955,2326,116276,3717,185816,3758,187895,4385,219250,947,47305,867,43310,4472,223552,364,18183,548,27389,2670,133472,1852,92578,4439,221922,560,27970,560,27980,4174,208658,1745,87205,1766,88252,1550,77467,826,41278,685,34228,3496,174778,4552,227553,3740,186978,244,12152,3073,153611,4042,202065,4042,202076,58,2881,1114,55661,4454,222677,4157,207850,1472,73587,3705,185232,3968,198374,743,37143,2147,107350,1830,91498,3805,190246,1831,91533,469,23409,3572,178563,639,31942,2551,127511,2692,134576,4669,233407,4083,204137,726,36290,1196,59754,1532,76576,3955,197750,627,31328,2881,144013,1118,55864,3057,152825,270,13456,587,29306,3354,167657,3354,167670,1742,87062,2747,137309,3195,159704,3827,191341,1506,75265,938,46895,298,14881,4459,222901,4240,211977,2335,116735,3814,190669,3986,199296,2034,101668,4644,232199,4486,224254,643,32104,1993,99604,1993,99631,1078,53858,644,32152,3099,154939,4609,230428,1496,74764,876,43760,428,21384,287,14313,1973,98632,3348,167373,4615,230721,1996,99792,1023,51112,3050,152475,445,22214,3393,169629,126,6289,3766,188297,1498,74852,1195,59734,1873,93626,79,3907,4298,214866,1507,75349,2978,148873,421,21011,4686,234257,1912,95587,4138,206866,319,15905,3255,162750,3082,154077,2179,108944,903,45133,712,35577,2783,139133,289,14434,2210,110463,4349,217437,4457,222811,3483,174150,2298,114867,2209,110443,3824,191184,2710,135498,2702,135070,1596,79793,2343,117127,523,26103,1972,98595,3481,174033,2344,117169,1335,66729,4580,228992,3288,164353,3377,168846,3002,150058,3715,185709,4197,209836,4318,215875,4680,233994,4095,204718,4660,232963,120,5979,3075,153731,1527,76309,2424,121190,1008,50389,1421,71049,2915,145707,987,49301,411,20518,621,31009,1248,62380,2382,119099,325,16244,1855,92735,1017,50801,3996,199777,1692,84568,3193,159612,3198,159871,2918,145862,684,34172,684,34199,1954,97700,339,16918,1067,53323,3484,174163,4039,201936,632,31571,834,41658,4697,234805,3417,170801,45,2209,1052,52555,1793,89614,4426,221290,3402,170088,970,48477,2919,145912,973,48639,3539,176904,4199,209939,4363,218113,1503,75134,2374,118658,3132,156560,3941,197010,3759,187907,4204,210171,4094,204658,674,33685,278,13854,1648,82382,4518,225871,3196,159774,833,41608,1097,54830,1097,54832,2509,125425,2515,125720,500,24960,379,18913,2273,113616,2273,113631,3065,153209,4339,216942,3858,192859,2812,140582,3722,186084,1866,93253,3784,189170,2968,148400,1587,79303,4664,233195,1728,86362,3311,165512,2615,130744,4659,232917,416,20780,305,15203,1449,72416,4258,212859,4417,220810,1113,55623,3388,169385,878,43888,4561,228029,1319,65906,511,25538,2203,110131,123,6130,497,24846,3061,153037,504,25162,4482,224079,2211,110542,1352,67558,4400,219967,3938,196899,698,34888,1355,67741,693,34632,363,18149,613,30639,3709,185446,532,26562,3967,198314,3967,198344,2948,147393,2959,147918,922,46068} ;



  std::cout<<"On , Off , MCBNBCos size: "<< _onbeam_v.size()<<", "<<_offbeam_v.size()<<", "<<_mcbnbcos_v.size()<<std::endl ;

    return true;
  }
  
  bool dQdxFilter::analyze(storage_manager* storage) {

   if ( _use_onbeam )
     _ev_v = _onbeam_v ;
   else if ( _use_offbeam )
     _ev_v = _offbeam_v;
   else if (_use_mcbnbcos )  
     _ev_v = _mcbnbcos_v;

   //std::cout<<"Ev size: "<<_ev_v.size()<<std::endl;
   //std::cout<<_use_onbeam<<", "<<_use_offbeam<<", "<<_use_mcbnbcos<<std::endl ;

   //for ( auto const & v : _ev_v ) 
   //  std::cout<<v <<", ";

   //std::cout<<std::endl ;
   
   std::vector<int> v = {int(storage->subrun_id()), int(storage->event_id())};
   //std::cout<<"V: "<<v[0]<<", "<<v[1]<<std::endl ;

   auto res = std::search(_ev_v.begin(),_ev_v.end(),v.begin(),v.end());
   if ( res == _ev_v.end() )
     return false;

   return true;
  }

  bool dQdxFilter::finalize() {

    return true;
  }

}
#endif
